name: Deploy to Render

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
        
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: "18"
        
    - name: Cache Python dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
          
    - name: Cache Node dependencies
      uses: actions/cache@v3
      with:
        path: frontend/node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Install Frontend dependencies
      run: |
        cd frontend
        npm ci
        
    - name: Build Frontend
      run: |
        cd frontend
        npm run build
    
    - name: Test Python Code
      run: |
        # Add your Python tests here
        python -c "import src.api.main; print('Python imports successful')"
        
    - name: Test API Health
      run: |
        # Start the API in background for testing
        python -m uvicorn src.api.main:app --host 0.0.0.0 --port 8000 &
        sleep 10
        curl -f http://localhost:8000/health || exit 1
        
  docker-build-test:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build Docker image
      uses: docker/build-push-action@v5
      with:
        context: .
        push: false
        tags: ai-trading-system:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Test Docker container
      run: |
        docker run -d --name test-container -p 8000:8000 \
          -e OPENAI_API_KEY=test_key \
          -e DATABASE_URL=sqlite:///./trading.db \
          -e DATABASE_PASSWORD=test_password \
          ai-trading-system:test
        sleep 30
        curl -f http://localhost:8000/health || exit 1
        docker logs test-container
        docker stop test-container

  notify-render:
    runs-on: ubuntu-latest
    needs: [test, docker-build-test]
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Notify Render of deployment
      run: |
        echo "âœ… All tests passed! Render will automatically deploy from main branch."
        echo "ðŸš€ Check your Render dashboard for deployment status."